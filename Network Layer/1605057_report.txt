                                DVR
Lambda              Avg. Hop_counts             Drop Rate(%)

0.01                 1.9765                     0.33
0.05                 2.0714                     0.36
0.10                 2.2134                     0.35
0.25                 1.8286                     0.44
0.50                 1.6377                     0.49
0.80                 1.7843                     0.62


                               Simple DVR
Lambda              Avg. Hop_counts             Drop Rate(%)

0.01                 1.9759                     0.38
0.05                 3.0543                     0.48
0.10                 2.5634                     0.48
0.25                 2.4028                     0.31
0.50                 1.7872                     0.69
0.80                 1.6538                     0.82


Here, at first 80% of all the routers are kept on initially. So when routers change their state at first there're 80% chances that routers goes 'off' and 20% chances that routers goes 'on'. So, after some time, there'll be equivalence that 50% routers are on and the other 50% is off. At this point, if we use DVR() method and run client, we may see a little difference than using simpleDVR(). simpleDVR() doesn't resolve 'slow convergence to infinity' issues. In presence of broken links, not only routing loops can form but also the loops can persist indefinitely. Worse, this loop may stay with us for a while and that may cause more drops of packets. DVR() solves this issue by using split horizon and forced update methods. So the drop rates may be less when DVR() is used.